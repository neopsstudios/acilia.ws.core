parameters:

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    WS\Core\:
        resource: '../../*'
        exclude: '../../{Entity,Migrations,Tests,Widget}'

    WS\Core\Controller\:
        resource: '../../Controller/*'
        tags: ['controller.service_arguments']

    WS\Core\Service\ContextService:
        public: true
        arguments:
            $debug: '%kernel.debug%'

    # Tag Services (WS Core Services must have 1024 priority)
    WS\Core\Service\SidebarDefinitionService:
        tags:
            - { name: ws.sidebar_definition, priority: 1024 }

    WS\Core\Widestand:
        tags:
            - { name: ws.component }

    # Listeners
    WS\Core\EventListener\ContextListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: setupDomain, priority: 127 }

    WS\Core\EventListener\TemplateListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: setupTemplate, priority: 126 }

    WS\Core\EventListener\LocaleListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: setupLocale, priority: 125 }

    WS\Core\EventListener\DeviceListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: setupDevice, priority: 125 }

    WS\Core\EventListener\TranslationListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onRequest, priority: 14 }

    WS\Core\EventListener\ResponseListener:
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: onResponse, priority: -512 }

    WS\Core\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onException, priority: 256 }

    # Data Collector
    WS\Core\Library\DataCollector\BuildCollector:
        tags:
            - { name: data_collector, template: '@WSCore/data_collector/build.html.twig', id: 'ws.build_collector' }

    # Activity Log Subscriber
    WS\Core\EventListener\ActivityLogListener:
        tags:
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: preRemove }
            - { name: kernel.event_listener, event: kernel.controller, method: onController, priority: 121 }

    # Maker CRUD extension
    WS\Core\Library\Maker\MakeCrud:
        arguments:
            $doctrineHelper: '@maker.doctrine_helper'
        tags:
            - { name: maker.command }
